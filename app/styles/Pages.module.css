/*
-------------------共通スタイル--------------------
*/
.pageForm {
  display: contents;
}

.pageContents {
  width: 100%;
  max-width: 1200px;
  position: absolute;
  left: 0;
  right: 0;
  margin: 0 auto;
}

.pageWrapper {
  display: flex;
}

.buttonContainer {
  margin: auto;
  grid-area: buttonArea;
}
.buttonContent {
  margin: auto;
}

/*
--------------------top page--------------------
*/
.scrollContainer {
  width: 100%;
  padding: var(--spacing-lg);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
}

.pageTitleBox {
  width: 100%;
  height: 80px;
  display: flex;
  justify-content: center;
  align-items: center;
}

/*
--------------------home page--------------------
*/
.homePageContents {
  top: 0;
  bottom: 0;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.homeButtons {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.settingPanel {
  width: auto;
  height: auto;
  position: absolute;
  bottom: 0;
  right: 0;
  padding: var(--spacing-sm);
}

.settingPanelContent {
  background-color: var(--color-secondary);
  border-radius: var(--border-radius-sm);
  padding: var(--spacing-sm);
}

.settingPanelItem {
  margin: var(--spacing-sm) auto;
  text-align: center;
}

.settingPanelItem:last-child {
  text-align: right;
}

.settingButtonText {
  color: var(--color-text-light);
  font-size: var(--font-size-sm);
}

/*
--------------------list page--------------------
*/
.listPageContents {
  top: 80px;
}

.listSearchArea {
  display: flex;
  justify-content: center;
  align-items: stretch;
  gap: 1rem;
  padding: var(--spacing-sm) 0;
  margin: 0 var(--spacing-xs);
  border-bottom: 1px solid var(--color-background-dark);
}

.listSearchArea input[type="text"] {
  width: 100%;
  max-width: 80%;
  padding: var(--spacing-xs) var(--spacing-sm);
  border: 1px solid var(--color-background-dark);
  border-radius: var(--border-radius-sm);
  outline: none;
  transition: border-color 0.3s ease;
}

.listSearchArea input[type="text"]:focus {
  border-color: var(--color-main);
}

.listSearchArea label {
  display: contents;
}

.listCheckboxContainer {
  width: 100%;
  height: var(--item-lg-width);
  position: absolute;
  top: 0;
  left: 0;
  transform: translateY(-100%);
}

.listCheckboxLabel {
  display: contents;
}

.listCheckboxInput {
  width: var(--item-sm-width);
  height: var(--item-sm-width);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.listScrollButtons {
  display: flex;
  justify-content: center;
  margin-top: var(--spacing-md);
  gap: 8px;
}

.listScrollButtons button {
  padding: var(--spacing-xs) var(--spacing-sm);
  border: 1px solid var(--color-background-light);
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
  border-radius: var(--border-radius-xs);
  color: var(--color-text-light);
  background-color: var(--color-secondary);
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.listScrollButtons button:hover {
  background-color: var(--color-secondary-dark);
}
.listPageContents .listPcCard .buttonContent.deleteButtonContent {
  margin: var(--spacing-xs);
}
.listPageContents .listMobileCard .buttonContent.deleteButtonContent {
  margin-top: var(--spacing-md);
  margin-bottom: var(--spacing-xl);
}

.listPageContents .buttonContent.versionButtonContent {
}

.listPageContents .buttonContent.sortButtonContent {
  width: 100%;
  margin: var(--spacing-sm);
  display: flex;
  justify-content: center;
  align-items: center;
}
/* Mobile */
.listMobilePageWrapper {
  flex-direction: row;
  overflow-x: scroll;
  display: flex;
  flex-shrink: 0;
  margin-right: var(--spacing-sm);
}

.listMobilePageWrapper::-webkit-scrollbar {
  width: 10px;
  height: 12px;
  background-color: #f5f5f5;
}

.listMobilePageWrapper::-webkit-scrollbar-thumb {
  background-color: var(--color-secondary);
  border-radius: var(--border-radius-xs);
}

.listItemCard {
  position: relative;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: stretch;
  justify-content: center;
}

.listItemCard:nth-child(odd) {
  background-color: var(--color-background-light);
}

.listItemCard:nth-child(even) {
  background-color: var(--color-background-dark);
}

.listMobileCard {
  width: fit-content;
  max-width: 350px;
  padding: 0 var(--spacing-sm);
  margin: 0 auto;
  flex-shrink: 0;
  margin-right: var(--spacing-sm);
  top: var(--spacing-xl);
}

.listItemLabel {
  color: var(--color-secondary-dark);
}

.listItemValue:not(.listItemImageBox):not(.listItemChartImageBox) {
  margin-left: var(--spacing-xs);
}

.listItemImageBox {
  width: 100%;
  max-width: 300px;
  margin: 0 auto;
}

.listItemTasting {
  display: inline-flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.listItemTasting .listItemValue {
  text-align: center;
}

.listItemTasting > *:not(.listItemOverall):not(.listItemChartImageBox) {
  flex: 1 1;
}

.listItemOverall {
  width: 100%;
}

.listItemChartImageBox {
  display: block;
  width: 100%;
  max-width: 300px;
  margin: 0 auto;
}

.listItemChartImage {
  width: inherit;
}

/* Tablet */
@media screen and (min-width: 600px) {
  .listSearchArea {
    max-width: 50%;
    margin: 0 auto;
  }
}

/* PC */
@media screen and (min-width: 960px) {
  .listPageContents {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: stretch;
    top: 80px;
  }

  .listPcPageWrapper {
    flex-direction: column;
  }

  .listItemCard {
    width: 95%;
    height: auto;
    display: grid;

    grid-template-areas:
      "coffeeBeans brewingRecipe tasting tasting"
      "memoArea memoArea memoArea buttonArea";
    grid-template-columns: auto auto auto auto;
    grid-template-rows: auto auto;
  }

  .listPcCard {
    margin: 0 0 0 auto;
  }

  .listPcCard:last-child {
    border-top: 0.1px solid var(--color-background-dark);
    border-bottom: 0.1px solid var(--color-background-dark);
  }

  .listPcCard:not(:first-child, :last-child) {
    border-top: 0.1px solid var(--color-background-dark);
  }

  .listPcCard > .buttonContent.deleteButtonContent {
    margin: var(--spacing-xs);
  }

  .listItemValue {
    margin-left: 0;
  }

  .listItemCoffeeBeans {
    grid-area: coffeeBeans;
    display: grid;
    grid-template-areas:
      "coffeeName coffeeName coffeeName coffeeName"
      "image variety variety variety"
      "image roastingDegree roastingDegree roastingDegree"
      "image productionArea productionArea productionArea";
    grid-template-columns: auto auto auto auto;
    gap: var(--spacing-xs);
  }

  .listItemCoffeeBeans > * {
    display: flex;
  }

  .listItemCoffeeBeans .listItemProductionArea {
    flex-direction: column;
  }

  .listItemImageBox {
    grid-area: image;
  }

  .listItemImage {
    width: calc(var(--item-image-width) * 2);
    height: auto;
    margin: var(--spacing-xs);
  }

  .listItemCoffeeName {
    grid-area: coffeeName;
  }

  .listItemVariety {
    grid-area: variety;
  }

  .listItemProductionArea {
    grid-area: productionArea;
  }

  .listItemRoastingDegree {
    grid-area: roastingDegree;
  }

  .listItemBrewingRecipe {
    grid-area: brewingRecipe;
    display: grid;
    grid-template-areas:
      "exMethod exMethod exMethod exMethod"
      "exMaker exMaker exMaker exMaker"
      "measurementMethod measurementMethod exTime exTime"
      "coffeeAmount waterAmount grindSize temperature";
    grid-template-columns: auto auto auto auto;
    gap: var(--spacing-xs);
    align-items: center;
  }

  .listItemBrewingRecipe > * {
    display: flex;
    align-items: stretch;
  }

  .listItemBrewingRecipe .listItemExMethod,
  .listItemBrewingRecipe .listItemExMaker {
    flex-direction: row;
    justify-content: flex-start;
  }

  .listItemBrewingRecipe > *:not(.listItemExMethod):not(.listItemExMaker) {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
  }

  .listItemExMethod {
    grid-area: exMethod;
  }

  .listItemExMaker {
    grid-area: exMaker;
  }

  .listItemGrindSize {
    grid-area: grindSize;
  }

  .listItemTemperature {
    grid-area: temperature;
  }

  .listItemCoffeeAmount {
    grid-area: coffeeAmount;
  }

  .listItemWaterAmount {
    grid-area: waterAmount;
  }

  .listItemMeasurementMethod {
    grid-area: measurementMethod;
  }

  .listItemExTime {
    grid-area: exTime;
  }

  .listItemTasting {
    grid-area: tasting;
    display: grid;
    grid-template-areas:
      "acidity overall"
      "bitterness chartImage"
      "body chartImage"
      "aroma chartImage"
      "aftertaste chartImage";
    gap: var(--spacing-xs);
    justify-items: center;
    align-items: start;
  }

  .listItemTasting > * {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  .listItemAcidity {
    grid-area: acidity;
  }

  .listItemBitterness {
    grid-area: bitterness;
  }

  .listItemBody {
    grid-area: body;
  }

  .listItemAroma {
    grid-area: aroma;
  }

  .listItemAftertaste {
    grid-area: aftertaste;
  }

  .listItemOverall {
    grid-area: overall;
  }

  .listItemOverall > .listItemValue {
    width: 50%;
  }

  .listItemChartImageBox {
    grid-area: chartImage;
    width: calc(var(--item-image-width) * 2);
    height: auto;
    margin: var(--spacing-xs);
  }

  .listItemMemoArea {
    grid-area: memoArea;
  }

  .listSearchArea input[type="text"] {
    max-width: 80%;
    margin: 0 auto;
  }

  .listCheckboxContainer {
    width: auto;
    height: auto;
    position: absolute;
    top: 50%;
    left: 0;
    transform: translate(-110%, -50%);
  }

  .listCheckboxInput {
    width: var(--item-sm-width);
    height: var(--item-sm-width);
    position: static;
    top: unset;
    transform: unset;
  }

  .listItemShopData {
    grid-area: shopData;
  }

  .listItemShopName {
    grid-area: shopName;
  }
  .listItemShopPrice {
    grid-area: shopPrice;
  }
  .listItemShopDate {
    grid-area: shopDate;
  }
  .listItemShopAddress {
    grid-area: shopAddress;
  }
  .listItemShopUrl {
    grid-area: shopUrl;
  }

  .listItemShopCoffee {
    grid-area: shopCoffee;
  }
}
/*
--------------------create page--------------------
*/
.createPageWrapper {
  flex-grow: 1;
  flex-direction: column;
}

.createPageContents {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: stretch;
  top: 80px;
}
.createPageContents .buttonContainer {
  display: flex;
}
.createPageContents .buttonContent.saveButtonContent,
.createPageContents .buttonContent.resetButtonContent {
  margin: var(--spacing-md) var(--spacing-xs) var(--spacing-xl);
}
.createSelfVersionContents,
.createShopVersionContents {
  display: contents;
}
@media screen and (min-width: 600px) {
  .createSelfVersionContents,
  .createShopVersionContents {
    display: grid;
  }

  .createShopVersionContents > .leftColumn,
  .createSelfVersionContents > .leftColumn {
    grid-area: 1 / 1 / 2 / 2;
  }
  .createShopVersionContents > .rightColumn,
  .createSelfVersionContents > .rightColumn {
    grid-area: 1 / 2 / 2 / 3;
  }
  .createShopVersionContents > .buttonContent,
  .createSelfVersionContents > .buttonContent {
    grid-area: 2 / 1 / 3 / 3;
  }
}
/*
--------------------item page--------------------
*/
.itemPageContents {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: stretch;
  top: calc(80px + var(--spacing-md));
  padding: 0px var(--spacing-sm);
}
.itemPageContents .buttonContainer {
  width: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: stretch;
  gap: var(--spacing-xs);
  margin-bottom: var(--spacing-xl);
}

.itemPcItem,
.mobileItem {
  background-color: var(--color-background-light);
  border-radius: var(--border-radius-sm);
  padding: var(--spacing-md);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.mobileItem {
  margin-bottom: var(--spacing-md);
}

.itemPcPageWrapper {
  flex-direction: column;
}

.itemPcCard {
  display: grid;
  /* grid-template-columns: 1fr 1fr;
  grid-template-rows: auto auto auto; */
  gap: var(--spacing-md);
  grid-template-areas:
    "coffeeBeans brewingRecipe"
    "tasting memoArea"
    "buttonArea buttonArea";
}

.itemPcCard > .itemTasting {
  grid-area: tasting;
}
.itemPcCard > .itemMemoArea {
  grid-area: memoArea;
}
.itemPcCard > .buttonContent {
  grid-column: 1 / span 2;
  margin-top: var(--spacing-md);
}

.mobilePageWrapper {
  flex-direction: column;
}

.mobileCard {
  width: 100%;
}

.itemCoffeeBeans {
  grid-area: coffeeBeans;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.itemBrewingRecipe {
  grid-area: brewingRecipe;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.itemTasting {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.itemMemoArea {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.itemLabel {
  font-weight: bold;
  color: var(--color-secondary-dark);
  font-size: var(--font-size-sm);
}

.itemValue {
  color: var(--color-text-dark);
  font-size: var(--font-size-md);
}

.itemImageBox {
  text-align: center;
  margin: var(--spacing-sm) 0;
}

.itemImage {
  width: calc(var(--item-image-width) * 2);
  height: auto;
  border-radius: var(--border-radius-sm);
  overflow: hidden;
}

.itemChartImageBox {
  text-align: center;
  margin: var(--spacing-sm) 0;
}

.itemChartImage {
  width: calc(var(--item-image-width) * 2);
  height: auto;
  border-radius: var(--border-radius-sm);
  overflow: hidden;
}

@media screen and (min-width: 600px) {
  .itemPcPageWrapper {
    flex-direction: column;
  }
  .itemTasting {
    display: grid;
    align-content: stretch;
    align-items: stretch;
    justify-items: center;
    justify-content: space-between;
  }
  .itemTasting .itemValue {
    text-align: center;
  }
  .itemAcidity {
    grid-area: 1 / 1 / 2 / 2;
  }
  .itemBitterness {
    grid-area: 1 / 2 / 2 / 3;
  }
  .itemBody {
    grid-area: 1 / 3 / 2 / 4;
  }
  .itemAroma {
    grid-area: 1 / 4 / 2 / 5;
  }
  .itemAftertaste {
    grid-area: 1 / 5 / 2 / 6;
  }
  .itemOverall {
    grid-area: 2 / 1 / 3 / 6;
  }
  .itemChartImageBox {
    grid-area: 3 / 1 / 4 / 6;
  }
}

@media screen and (min-width: 960px) {
  .itemPcCard {
    grid-template-areas:
      "coffeeBeans brewingRecipe"
      "tasting memoArea"
      "buttonArea buttonArea";
  }

  .itemCoffeeBeans {
    display: grid;
    grid-template-areas:
      "image coffeeName"
      "image variety"
      "image productionArea"
      "image roastingDegree";
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-sm);
  }

  .itemImageBox {
    grid-area: image;
  }
  .itemCoffeeName {
    grid-area: coffeeName;
  }
  .itemVariety {
    grid-area: variety;
  }
  .itemProductionArea {
    grid-area: productionArea;
  }
  .itemRoastingDegree {
    grid-area: roastingDegree;
  }

  .itemBrewingRecipe {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-sm);
  }

  .itemTasting {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-areas:
      "tastingAcidity chartImage"
      "tastingBitterness chartImage"
      "tastingBody chartImage"
      "tastingAroma chartImage"
      "tastingAftertaste tastingOverall";

    gap: var(--spacing-sm);
    justify-content: center;
    align-items: center;
  }
  .itemAcidity {
    grid-area: tastingAcidity;
  }
  .itemBitterness {
    grid-area: tastingBitterness;
  }
  .itemBody {
    grid-area: tastingBody;
  }
  .itemAroma {
    grid-area: tastingAroma;
  }
  .itemAftertaste {
    grid-area: tastingAftertaste;
  }
  .itemOverall {
    grid-area: tastingOverall;
  }
  .itemTasting .itemAcidity,
  .itemTasting .itemBitterness,
  .itemTasting .itemBody,
  .itemTasting .itemAroma,
  .itemTasting .itemAftertaste,
  .itemTasting .itemOverall {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  .itemChartImageBox {
    grid-area: chartImage;
    margin: 0;
  }
}

/*
--------------------update page--------------------
*/
.updatePageContents {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: stretch;
  top: 80px;
}
